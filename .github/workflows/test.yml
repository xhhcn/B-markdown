name: Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18, 20]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Clean build artifacts (Unix)
      if: runner.os != 'Windows'
      run: |
        rm -rf dist dist-electron release
        find . -name "*.d.ts" -not -path "./node_modules/*" -delete || true
        
    - name: Clean build artifacts (Windows)
      if: runner.os == 'Windows'
      run: |
        if (Test-Path dist) { Remove-Item -Recurse -Force dist }
        if (Test-Path dist-electron) { Remove-Item -Recurse -Force dist-electron }
        if (Test-Path release) { Remove-Item -Recurse -Force release }
        Get-ChildItem -Path . -Name "*.d.ts" -Recurse | Where-Object { $_ -notlike "*node_modules*" } | Remove-Item -Force
      shell: pwsh
      
    - name: Run type check
      run: npx tsc --project tsconfig.test.json
      
    - name: Build production
      run: npx vite build
      env:
        CI: true