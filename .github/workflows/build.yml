name: Build Multi-Platform

on:
  push:
    tags:
      - 'v*'
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  actions: read
  checks: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            platform: mac
          - os: windows-latest  
            platform: win
          - os: ubuntu-latest
            platform: linux
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Clean build artifacts (Unix)
      if: runner.os != 'Windows'
      run: |
        rm -rf dist dist-electron release
        find . -name "*.d.ts" -not -path "./node_modules/*" -delete || true
        
    - name: Clean build artifacts (Windows)
      if: runner.os == 'Windows'
      run: |
        if (Test-Path dist) { Remove-Item -Recurse -Force dist }
        if (Test-Path dist-electron) { Remove-Item -Recurse -Force dist-electron }
        if (Test-Path release) { Remove-Item -Recurse -Force release }
        Get-ChildItem -Path . -Name "*.d.ts" -Recurse | Where-Object { $_ -notlike "*node_modules*" } | Remove-Item -Force
      shell: pwsh
      
    - name: Build application
      run: npm run build:${{ matrix.platform }}
      env:
        CI: true
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: B-Markdown-${{ matrix.platform }}-${{ github.sha }}
        path: |
          release/
          !release/**/*.blockmap
        retention-days: 30
        
    - name: Create Release (on tag)
      if: startsWith(github.ref, 'refs/tags/v') && matrix.platform == 'linux'
      uses: softprops/action-gh-release@v2
      with:
        files: |
          release/*.dmg
          release/*.zip
          release/*.exe
          release/*.AppImage
          release/*.tar.gz
        draft: false
        prerelease: false
        generate_release_notes: true
        fail_on_unmatched_files: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # æ”¶é›†æ‰€æœ‰æž„å»ºäº§ç‰©
  collect-artifacts:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        
    - name: Display artifacts
      run: |
        echo "## ðŸ“¦ Build Artifacts" >> $GITHUB_STEP_SUMMARY
        echo "âœ… Multi-platform build completed successfully" >> $GITHUB_STEP_SUMMARY
        find artifacts -name "*.dmg" -o -name "*.zip" -o -name "*.exe" -o -name "*.AppImage" -o -name "*.tar.gz" | sort >> $GITHUB_STEP_SUMMARY
        
    - name: Create unified release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v2
      with:
        files: |
          artifacts/**/*.dmg
          artifacts/**/*.zip
          artifacts/**/*.exe
          artifacts/**/*.AppImage
          artifacts/**/*.tar.gz
        draft: false
        prerelease: false
        generate_release_notes: true
        fail_on_unmatched_files: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}