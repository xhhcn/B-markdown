name: Build and Release B-Markdown

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  # 强制在GitHub Actions中使用最新的Node.js和npm
  NODE_VERSION: '18'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run type check
        run: npx tsc --noEmit

  build:
    needs: test
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            arch: x64
          - os: windows-latest
            platform: win32
            arch: x64
          - os: macos-latest
            platform: darwin
            arch: x64
          - os: macos-latest
            platform: darwin
            arch: arm64
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application (Linux)
        if: matrix.platform == 'linux'
        run: npm run build:linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build application (Windows)
        if: matrix.platform == 'win32'
        run: npm run build:win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build application (macOS)
        if: matrix.platform == 'darwin'
        run: npm run build:mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: List build outputs
        run: ls -la release/

      - name: Upload build artifacts (Linux)
        if: matrix.platform == 'linux'
        uses: actions/upload-artifact@v4
        with:
          name: B-Markdown-linux-${{ matrix.arch }}
          path: |
            release/*.AppImage
            release/*.deb
            release/*.blockmap
          if-no-files-found: error

      - name: Upload build artifacts (Windows)
        if: matrix.platform == 'win32'
        uses: actions/upload-artifact@v4
        with:
          name: B-Markdown-windows-${{ matrix.arch }}
          path: |
            release/*.exe
            release/*.blockmap
          if-no-files-found: error

      - name: Upload build artifacts (macOS)
        if: matrix.platform == 'darwin'
        uses: actions/upload-artifact@v4
        with:
          name: B-Markdown-macos-${{ matrix.arch }}
          path: |
            release/*.dmg
            release/*.blockmap
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
        
      - name: Display structure of downloaded files
        run: ls -la artifacts/
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/**/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}